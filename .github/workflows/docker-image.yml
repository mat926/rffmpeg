name: Check Jellyfin Release and Push to Docker

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  push:
    branches:
      - master
  workflow_dispatch:     # Allows manual triggering

jobs:
  check-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest Jellyfin version
        id: version_check
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/jellyfin/jellyfin/releases/latest | jq -r '.tag_name')
          if [ -f last_jellyfin_version.txt ]; then
            CURRENT_TAG=$(cat last_jellyfin_version.txt)
          else
            CURRENT_TAG=""
          fi
          echo "Latest tag: $LATEST_TAG"
          echo "Current tag: $CURRENT_TAG"
          if [ "$LATEST_TAG" != "$CURRENT_TAG" ]; then
            echo "New version available"
            echo "new_version=true" >> $GITHUB_OUTPUT
            echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            echo "No new version available"
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

      - name: Update version file
        if: steps.version_check.outputs.new_version == 'true'
        run: |
            echo "${{ steps.version_check.outputs.latest_tag }}" > last_jellyfin_version.txt
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add last_jellyfin_version.txt
            git commit -m "Update Jellyfin version to ${{ steps.version_check.outputs.latest_tag }}"
            git push

      - name: Build and push Docker image
        if: steps.version_check.outputs.new_version == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
            echo "Building and pushing Docker image"
         # docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
         # docker build -t $DOCKERHUB_USERNAME/jellyfin:${{ steps.version_check.outputs.latest_tag }} .
         # docker push $DOCKERHUB_USERNAME/jellyfin:${{ steps.version_check.outputs.latest_tag }}
          
         # Optionally push as 'latest' tag
            # docker tag $DOCKERHUB_USERNAME/jellyfin:${{ steps.version_check.outputs.latest_tag }} $DOCKERHUB_USERNAME/jellyfin:latest
            # docker push $DOCKERHUB_USERNAME/jellyfin:latest

